{"version":3,"sources":["components/Header/Header.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api/helper.tsx","api/validations.tsx","components/NewPerson/NewPerson.tsx","components/PersonName/PersonName.tsx","components/PersonInfo/PersonInfo.tsx","components/PersonRow/PersonRow.tsx","components/TableHeader/TableHeader.tsx","components/PeopleTable/PeopleTable.tsx","api/api.js","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["Header","className","activeClassName","to","exact","HomePage","NotFoundPage","THEAD_TITLE","Name","name","isSortable","Sex","Born","Died","Father","Mother","INITIAL_PERSON","sex","born","died","fatherName","motherName","slug","filteringPeopleList","query","peopleList","newPeopleList","filter","person","toLowerCase","includes","sortingList","title","order","sortList","sort","p1","p2","localeCompare","reverse","filteringPeopleBySex","people","childBorn","isValidYears","year","NewPerson","setPeople","useState","men","setMen","women","setWomen","setPerson","history","useHistory","useEffect","validations","setValidations","validYears","setValidYears","handleSubmitNewPerson","useCallback","split","join","push","handleChangeForm","event","target","value","Number","test","isValidName","htmlFor","id","type","placeholder","onChange","disabled","defaultValue","key","map","father","mother","onClick","PersonName","search","useLocation","searchParams","URLSearchParams","handleNameClicked","set","toString","onKeyDown","role","tabIndex","PersonInfo","PersonRow","initialList","location","get","selectedPerson","setSelectedPerson","classNames","selected","Object","keys","find","man","woman","TableHeader","sortOrder","setSortOrder","sortPeopleList","has","handleSortList","delete","values","src","alt","PeopleTable","error","undefined","foundPerson","setFoundPerson","isAddingForm","setIsAddingForm","apliedQuery","setQuery","applyQuery","debounce","newQuery","handleQueryChange","updatePeopleList","getPeople","fetch","then","response","json","Loader","App","isLoading","setIsLoading","setError","result","catch","e","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.daaf40f0.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\n\nexport const Header = () => (\n  <nav className=\"navbar\">\n    <div className=\"navbar-container\">\n      <NavLink\n        className=\"navbar-item is-tab\"\n        activeClassName=\"is-active\"\n        to=\"/\"\n        exact\n      >\n        Home\n      </NavLink>\n      <NavLink\n        className=\"navbar-item is-tab\"\n        to=\"/people\"\n        activeClassName=\"is-active\"\n      >\n        People\n      </NavLink>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage = () => (\n  <>\n    <h2>Home Page</h2>\n  </>\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h2>Page not found</h2>\n);\n","import { ServerIPerson, THEADTITLEI } from './interface';\n\nexport const THEAD_TITLE: THEADTITLEI = {\n  Name: {\n    name: 'Name',\n    isSortable: true,\n  },\n  Sex: {\n    name: 'Sex',\n    isSortable: true,\n  },\n  Born: {\n    name: 'Born',\n    isSortable: true,\n  },\n  Died: {\n    name: 'Died',\n    isSortable: true,\n  },\n  Father: {\n    name: 'Father',\n    isSortable: false,\n  },\n  Mother: {\n    name: 'Mother',\n    isSortable: false,\n  },\n};\n\nexport const SORT_ORDER = {\n  name: 'both',\n  sex: 'both',\n  born: 'both',\n  died: 'both',\n};\n\nexport const INITIAL_PERSON: ServerIPerson = {\n  name: '',\n  sex: '',\n  born: 0,\n  died: 0,\n  fatherName: '',\n  motherName: '',\n  slug: '',\n};\n\nexport function filteringPeopleList(query: string, peopleList: ServerIPerson[]): ServerIPerson[] {\n  let newPeopleList = [...peopleList];\n\n  if (query) {\n    newPeopleList = peopleList.filter(person => (\n      (person.name.toLowerCase().includes(query))\n      || (((person.fatherName || '') + (person.motherName || ''))\n        .toLowerCase().includes(query)\n      )));\n  }\n\n  return newPeopleList;\n}\n\nexport function sortingList(\n  peopleList: ServerIPerson[],\n  title: string,\n  order: string,\n): ServerIPerson[] {\n  const sortList = [...peopleList];\n\n  switch (title) {\n    case THEAD_TITLE.Name.name:\n      sortList\n        .sort((p1, p2) => p1.name\n          .localeCompare(p2.name));\n      break;\n    case THEAD_TITLE.Sex.name:\n      sortList\n        .sort((p1, p2) => p1.sex.localeCompare(p2.sex));\n      break;\n    case THEAD_TITLE.Born.name:\n      sortList\n        .sort((p1, p2) => p1.born - p2.born);\n      break;\n    case THEAD_TITLE.Died.name:\n      sortList\n        .sort((p1, p2) => p1.died - p2.died);\n      break;\n    default:\n      break;\n  }\n\n  if (order === 'desc') {\n    sortList.reverse();\n  }\n\n  return sortList;\n}\n\nexport const filteringPeopleBySex = (\n  people: ServerIPerson[],\n  sex: string,\n  childBorn: number,\n) => people.filter(person => person.sex === sex && person.died > childBorn);\n","export const isValidName = (name: string) => {\n  const regEx = /^[a-zA-Z\\s]*$/;\n\n  return regEx.test(name);\n};\n\nexport const isValidYears = (year: number) => (year >= 1400) && (year <= 2021);\n\nexport const isValidPersonYear = (year: number) => year >= 0 && year < 150;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  ChangeEvent, useCallback, useEffect, useState,\n} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ServerIPerson, Validation } from '../../api/interface';\nimport './NewPerson.scss';\n\nimport { filteringPeopleBySex, INITIAL_PERSON } from '../../api/helper';\nimport { isValidName, isValidPersonYear, isValidYears } from '../../api/validations';\n\ntype NewPersonT = {\n  people: ServerIPerson[];\n  setPeople: Function;\n};\n\nexport const NewPerson: React.FC<NewPersonT> = ({ people, setPeople }) => {\n  const [men, setMen] = useState<ServerIPerson[]>([]);\n  const [women, setWomen] = useState<ServerIPerson[]>([]);\n  const [person, setPerson] = useState<ServerIPerson>(INITIAL_PERSON);\n  const history = useHistory();\n\n  useEffect(() => {\n    setMen(filteringPeopleBySex(people, 'm', person.born));\n    setWomen(filteringPeopleBySex(people, 'f', person.born));\n  }, [person.born, people]);\n\n  const [validations, setValidations] = useState<Validation>({\n    name: true,\n    sex: true,\n    born: true,\n    died: true,\n  });\n  const [validYears, setValidYears] = useState<boolean>(true);\n\n  const handleSubmitNewPerson = useCallback(() => {\n    setPeople([\n      ...people,\n      {\n        ...person,\n        slug: `${person.name.toLowerCase().split(' ').join('_')}_${person.born}`,\n      },\n    ]);\n\n    history.push('/people');\n  }, [history, person, setPeople, people]);\n\n  const handleChangeForm = (event: ChangeEvent<{name: string; value: string}>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'born':\n        setValidations({\n          ...validations,\n          [name]: isValidYears(Number(event.target.value)),\n        });\n        setPerson({\n          ...person,\n          [name]: Number(value),\n        });\n        break;\n      case 'died':\n        setValidYears(isValidPersonYear(Number(event.target.value) - person.born));\n        setValidations({\n          ...validations,\n          [name]: isValidYears(Number(event.target.value)),\n        });\n        setPerson({\n          ...person,\n          [name]: Number(value),\n        });\n        break;\n      case 'name':\n        setValidations({\n          ...validations,\n          [name]: isValidName(value),\n        });\n        setPerson({\n          ...person,\n          [name]: value,\n        });\n        break;\n      default:\n        setPerson({\n          ...person,\n          [name]: value,\n        });\n        break;\n    }\n  };\n\n  return (\n    <form\n      className=\"NewPerson\"\n    >\n      <div>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            className={!validations.name ? 'error' : ''}\n            placeholder=\"Input full name...\"\n            onChange={handleChangeForm}\n          />\n        </label>\n        {!validations.name && (\n          <p>Name should contain only letters and spaces</p>\n        )}\n      </div>\n\n      <div className=\"sex\">\n        Sex:\n        <label htmlFor=\"sex-m\">\n          M\n          <input\n            type=\"radio\"\n            name=\"sex\"\n            id=\"sex-m\"\n            value=\"m\"\n            onChange={handleChangeForm}\n          />\n        </label>\n        <label htmlFor=\"sex-f\">\n          F\n          <input\n            type=\"radio\"\n            name=\"sex\"\n            id=\"sex-f\"\n            value=\"f\"\n            onChange={handleChangeForm}\n          />\n        </label>\n      </div>\n\n      <div>\n        <label htmlFor=\"born\">\n          Born\n          <input\n            id=\"born\"\n            name=\"born\"\n            className={!validations.born || !validYears ? 'error' : ''}\n            type=\"number\"\n            onChange={handleChangeForm}\n          />\n        </label>\n        {!validations.born && (\n          <p>Years have be between 1400 and the current year </p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"died\">\n          Died\n          <input\n            id=\"died\"\n            name=\"died\"\n            className={!validations.died || !validYears ? 'error' : ''}\n            type=\"number\"\n            disabled={!person.born}\n            onChange={handleChangeForm}\n          />\n        </label>\n        { !validations.died && (\n          <p>Years have be between 1400 and the current year </p>\n        )}\n        {!validYears && (\n          <p>Not entered correctly born or died year</p>\n        )}\n      </div>\n\n      <div>\n        <label>\n          Father:\n          <select\n            name=\"fatherName\"\n            disabled={!person.born}\n            defaultValue=\"\"\n            onChange={handleChangeForm}\n          >\n            <option key=\"0\" value=\"\">Selected father</option>\n            {\n              men.map(father => (\n                <option key={father.name} value={father.name}>{father.name}</option>\n              ))\n            }\n          </select>\n        </label>\n      </div>\n\n      <div>\n        <label>\n          Mother:\n          <select\n            name=\"motherName\"\n            defaultValue=\"\"\n            disabled={!person.born}\n            onChange={handleChangeForm}\n          >\n            <option key=\"0\" value=\"\">Selected mother</option>\n            {\n              women.map(mother => (\n                <option key={mother.name} value={mother.name}>{mother.name}</option>\n              ))\n            }\n          </select>\n        </label>\n      </div>\n\n      <input\n        type=\"submit\"\n        value=\"Add person\"\n        onClick={handleSubmitNewPerson}\n      />\n    </form>\n  );\n};\n","import React, { useCallback } from 'react';\nimport {\n  useLocation, useHistory,\n} from 'react-router-dom';\nimport { ServerIPerson } from '../../api/interface';\n\nimport './PersonName.scss';\n\ntype PersonName = {\n  person: ServerIPerson | undefined;\n};\n\nexport const PersonName: React.FC<PersonName> = ({ person }) => {\n  const { search } = useLocation();\n  const searchParams = new URLSearchParams(search);\n  const history = useHistory();\n\n  const handleNameClicked = useCallback(() => {\n    searchParams.set('slug', person?.slug || '');\n    history.push(`?${searchParams.toString()}`);\n  }, [history, searchParams, person]);\n\n  return (\n    <span\n      className={\n        person?.sex === 'f' ? 'women' : 'men'\n      }\n      onClick={handleNameClicked}\n      onKeyDown={handleNameClicked}\n      role=\"button\"\n      tabIndex={0}\n    >\n      {person?.name}\n    </span>\n  );\n};\n","import React from 'react';\nimport { ServerIPerson } from '../../api/interface';\nimport { PersonName } from '../PersonName';\n\nimport './PersonInfo.scss';\n\ntype PersonInfo = {\n  person: ServerIPerson | undefined;\n};\n\nexport const PersonInfo: React.FC<PersonInfo> = ({ person }) => (\n  <ul>\n    <li className=\"parents-info\">\n      Name:\n      <PersonName\n        person={person}\n      />\n    </li>\n    <li className=\"parents-info\">\n      Sex:\n      {person?.sex}\n    </li>\n    <li className=\"parents-info\">\n      Born:\n      {person?.born}\n    </li>\n    <li className=\"parents-info\">\n      Died:\n      {person?.died}\n    </li>\n  </ul>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { ServerIPerson } from '../../api/interface';\nimport { PersonInfo } from '../PersonInfo';\nimport { PersonName } from '../PersonName';\n\nimport './PersonRow.scss';\n\ntype PersonRow = {\n  people: ServerIPerson[];\n  initialList: ServerIPerson[];\n};\n\nexport const PersonRow: React.FC<PersonRow> = ({ people, initialList }) => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const [selectedPerson, setSelectedPerson] = useState<string | null>(searchParams.get('slug'));\n\n  useEffect(() => {\n    setSelectedPerson(searchParams.get('slug'));\n  }, [searchParams]);\n\n  return (\n    <>\n      {people.map((person) => (\n        <tr\n          id={person.slug}\n          key={person.slug}\n          className={classNames({ selected: person.slug === selectedPerson })}\n        >\n          {Object.keys(person).map((key) => (\n            key !== 'slug' && (\n              <td\n                key={key}\n                className={classNames({ 'selected-collumn': searchParams.get('sortBy')?.toLowerCase() === key })}\n              >\n                {key === 'name' && (\n                  <PersonName\n                    person={person}\n                  />\n                )}\n                {(key === 'born' || key === 'sex' || key === 'died') && (\n                  person[key]\n                )}\n                {key === 'fatherName' && (\n                  person.fatherName && (\n                    initialList.find(man => man.name === person.fatherName)\n                      ? (\n                        <PersonInfo\n                          person={initialList.find((man) => man.name === person.fatherName)}\n                        />\n                      )\n                      : (\n                        <p className=\"person\">{person.fatherName}</p>\n                      ))\n                )}\n                {key === 'motherName' && (\n                  person.motherName && (\n                    initialList.find(woman => woman.name === person.motherName)\n                      ? (\n                        <PersonInfo\n                          person={initialList.find(woman => woman.name === person.motherName)}\n                        />\n                      )\n                      : (\n                        <p className=\"person\">{person.motherName}</p>\n                      ))\n                )}\n              </td>\n            )\n          ))}\n        </tr>\n      ))}\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './TableHeader.scss';\n\nimport {\n  THEAD_TITLE, sortingList,\n} from '../../api/helper';\nimport { ServerIPerson, SortOrderI } from '../../api/interface';\n\ntype TableHeaderT = {\n  people: ServerIPerson[];\n  setPeople: Function;\n};\n\nexport const TableHeader: React.FC<TableHeaderT> = ({ people, setPeople }) => {\n  const [sortOrder, setSortOrder] = useState<SortOrderI>({\n    Name: 'both',\n    Sex: 'both',\n    Born: 'both',\n    Died: 'both',\n  });\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const sortPeopleList = useCallback(() => {\n    setPeople(\n      sortingList(\n        people,\n        searchParams.get('sortBy') || '',\n        searchParams.get('sortOrder') || '',\n      ),\n    );\n  }, [people, searchParams, setPeople]);\n\n  useEffect(() => {\n    if (searchParams.has('sortBy')) {\n      searchParams.set(\n        'sortOrder',\n        sortOrder[searchParams.get('sortBy') || ''],\n      );\n      if (history.location.search !== `?${searchParams.toString()}`) {\n        history.push(`?${searchParams.toString()}`);\n        sortPeopleList();\n      }\n    }\n  }, [sortOrder, searchParams, history, sortPeopleList]);\n\n  const handleSortList = useCallback((value: string) => {\n    if (THEAD_TITLE[value].isSortable) {\n      searchParams.set('sortBy', value);\n      setSortOrder({\n        ...sortOrder,\n        [value]: sortOrder[value] === 'desc'\n            || sortOrder[value] === 'both'\n          ? 'asc' : 'desc',\n      });\n    } else {\n      searchParams.delete('sortBy');\n      searchParams.delete('sortOrder');\n    }\n\n    if (history.location.search !== `?${searchParams.toString()}`) {\n      history.push(`?${searchParams.toString()}`);\n    }\n  }, [history, searchParams, sortOrder]);\n\n  return (\n    <tr>\n      {Object.values(THEAD_TITLE).map(title => (\n        <td\n          key={title.name}\n          onClick={() => handleSortList(title.name)}\n          className={classNames({\n            'selected-title': title.name === searchParams.get('sortBy'),\n          })}\n        >\n          {title.name}\n          {\n            title.name === searchParams.get('sortBy')\n              ? title.isSortable\n                  && (\n                    <img\n                      src={`images/sort_${sortOrder[title.name]}.png`}\n                      alt={`sort_${sortOrder[title.name]}`}\n                    />\n                  )\n              : title.isSortable\n                && (\n                  <img\n                    src=\"images/sort_both.png\"\n                    alt=\"sort_both\"\n                  />\n                )\n          }\n        </td>\n      ))}\n    </tr>\n  );\n};\n","import React, {\n  ChangeEvent, useCallback, useEffect, useState,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport {\n  useHistory, useLocation,\n} from 'react-router-dom';\nimport { ServerIPerson } from '../../api/interface';\nimport { PersonInfo } from '../PersonInfo';\nimport { PersonRow } from '../PersonRow';\n\nimport './PeopleTable.scss';\nimport {\n  filteringPeopleList,\n  sortingList,\n} from '../../api/helper';\nimport { TableHeader } from '../TableHeader';\n\ntype PeopleTableT = {\n  people: ServerIPerson[];\n  setPeople: Function;\n  error: string;\n};\n\nexport const PeopleTable: React.FC<PeopleTableT> = ({\n  people,\n  setPeople,\n  error,\n}) => {\n  const [foundPerson, setFoundPerson] = useState<ServerIPerson | undefined>(undefined);\n  const [isAddingForm, setIsAddingForm] = useState<boolean>(false);\n\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  // query zone\n  const apliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(apliedQuery);\n\n  const applyQuery = useCallback(debounce((newQuery: string) => {\n    if (newQuery) {\n      searchParams.set('query', newQuery);\n    } else {\n      searchParams.delete('query');\n    }\n\n    if (history.location.search !== `?${searchParams.toString()}`) {\n      history.push(`?${searchParams.toString()}`);\n    }\n  }, 500), [searchParams, history]);\n\n  const handleQueryChange = useCallback((event: ChangeEvent<{value: string}>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  }, [applyQuery]);\n\n  const updatePeopleList = useCallback(() => {\n    return searchParams.get('sortBy')\n      ? sortingList(\n        filteringPeopleList(\n          apliedQuery.toLowerCase(),\n          people,\n        ),\n        searchParams.get('sortBy') || '',\n        searchParams.get('sortOrder') || '',\n      )\n      : filteringPeopleList(\n        apliedQuery.toLowerCase(),\n        people,\n      );\n  }, [apliedQuery, people, searchParams]);\n\n  // found selected person\n  useEffect(() => {\n    if (searchParams.get('slug') !== foundPerson?.slug) {\n      setFoundPerson(people\n        .find(person => person.slug === searchParams.get('slug')));\n\n      if (people.find(person => person.slug === searchParams.get('slug')) === undefined\n        && searchParams.has('slug')) {\n        searchParams.delete('slug');\n        if (history.location.search !== `?${searchParams.toString()}`) {\n          history.push(`?${searchParams.toString()}`);\n        }\n      }\n    }\n  }, [searchParams, people, foundPerson, history]);\n\n  return (\n    <div className=\"PeoplePage\">\n      <div className=\"form-info\">\n        <div className=\"Filtering\">\n          <input\n            type=\"text\"\n            className=\"search\"\n            value={query}\n            placeholder=\"Search.....\"\n            onChange={handleQueryChange}\n          />\n        </div>\n\n        {foundPerson && (\n          <div className=\"info\">\n            <h2>Selected Person: </h2>\n            <PersonInfo person={foundPerson} />\n          </div>\n        )}\n        {!isAddingForm && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setIsAddingForm(true);\n              history.push('/people/new');\n            }}\n          >\n            Add person\n          </button>\n        )}\n      </div>\n      <table\n        className=\"PeopleTable\"\n      >\n        <thead>\n          <TableHeader\n            people={people}\n            setPeople={setPeople}\n          />\n        </thead>\n        <tbody>\n          {error\n            ? (\n              <p>{error}</p>\n            )\n            : (\n              <PersonRow\n                people={updatePeopleList()}\n                initialList={people}\n              />\n            )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst request = () => fetch(BASE_URL)\n  .then(response => response.json());\n\nexport const getPeople = () => request();\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <img\n    alt=\"Loader...\"\n    src=\"https://cutt.ly/sjRJK6w\"\n  />\n);\n","import React, { useEffect, useState } from 'react';\nimport {\n  HashRouter, Redirect, Route, Switch,\n}\n  from 'react-router-dom';\nimport 'bulma';\nimport '@fortawesome/fontawesome-free';\nimport './App.scss';\n\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { NewPerson } from './components/NewPerson';\nimport { PeopleTable } from './components/PeopleTable';\nimport { getPeople } from './api/api';\nimport { ServerIPerson } from './api/interface';\nimport { Loader } from './components/Loader';\n// import { Loader } from './components/Loader';\n\nconst App = () => {\n  const [people, setPeople] = useState<ServerIPerson[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(result => {\n        setPeople(result);\n        setIsLoading(false);\n      })\n      .catch((e) => setError(e));\n  }, []);\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Header />\n\n        <Switch>\n          <Route path=\"/people/new\">\n            <div className=\"form-popup\">\n              <NewPerson\n                people={people}\n                setPeople={setPeople}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/people\">\n            <h2>\n              People page\n            </h2>\n            {\n              isLoading\n                ? (\n                  <Loader />\n                )\n                : (\n                  <PeopleTable\n                    people={people}\n                    setPeople={setPeople}\n                    error={error}\n                  />\n                )\n            }\n          </Route>\n\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n\n          <Redirect path=\"/home\" to=\"/\" />\n\n          <NotFoundPage />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}